name: "Tag Composite Action"
description: "Checkout code and create a tag in the specified branch."
inputs:
  ref:
    description: "Branch to checkout before creating the tag."
    required: true
  tag-name:
    description: "Tag name to create, delete or check."
    required: true
  check-tag:
    description: "Check if the tag already exists."
    required: false
    default: "false"
  create-tag:
    description: "Create a new tag."
    required: false
    default: "true"
  force-create:
    description: "Force create the tag even if it exists."
    required: false
    default: "false"
  delete-tag:
    description: "Delete the specified tag."
    required: false
    default: "false"
  switch-to-tag:
    description: "Switch to the created tag after creation."
    required: false
    default: "true"
  tag-message:
    description: "Tag creation message."
    required: false
    default: "Release tag"
  create-release:
    description: "Create a GitHub release for the tag."
    required: false
    default: "false"
  dry-run:
    description: "Run the action in dry-run mode (no changes will be pushed)."
    required: false
    default: "false"

outputs:
  created-tag:
    description: "The tag that was created."
    value: ${{ steps.create-tag.outputs.tag }}
runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.ref }}
        fetch-depth: 0

    - name: Configure Git
      shell: bash
      run: |
        git config --global user.email "github-actions[bot]@qubership.com"
        git config --global user.name "GitHub Actions [Bot]"

    - name: Delete tag
      if: ${{ inputs.delete-tag == 'true' }}
      shell: bash
      run: |
        echo "üí• Deleting tag: '${{ inputs.tag-name }}'"
        if [ "${{ inputs.dry-run }}" == "true" ]; then
          echo "üß™ Dry run mode active. Skipping deletion push."
        else
          git tag -d "${{ inputs.tag-name }}"
          git push origin --delete "${{ inputs.tag-name }}"
        fi

    - name: Check if tag exists
      if: ${{ inputs.check-tag == 'true' }}
      shell: bash
      run: |
        if [ "$(git tag -l "${{ inputs.tag-name }}")" ]; then
          echo "‚ùó Tag '${{ inputs.tag-name }}' already exists. Exiting..."
          exit 1
        fi

    - name: Create tag
      id: create-tag
      if: ${{ inputs.create-tag == 'true' && inputs.delete-tag != 'true' }}
      shell: bash
      run: |
        if [ "${{ inputs.force-create }}" == "true" ] && [ "$(git tag -l "${{ inputs.tag-name }}")" ]; then
          echo "üîÑ Force create enabled: Deleting existing tag '${{ inputs.tag-name }}' locally and remotely"
          git tag -d "${{ inputs.tag-name }}"
          if [ "${{ inputs.dry-run }}" != "true" ]; then
            git push origin --delete "${{ inputs.tag-name }}"
          fi
        fi
        echo "üí° Trying to create tag: '${{ inputs.tag-name }}'"
        git tag -a "${{ inputs.tag-name }}" -m "${{ inputs.tag-message }}"
        if [ "${{ inputs.dry-run }}" == "true" ]; then
          echo "üß™ Dry run mode active. Skipping push."
        else
          git push origin "${{ inputs.tag-name }}"
          echo "‚úÖ Tag '${{ inputs.tag-name }}' pushed."
        fi
        echo "created-tag=${{ inputs.tag-name }}" >> $GITHUB_OUTPUT

    - name: Check if tag was create
      if: ${{ inputs.tag-name !== '' && inputs.create-release == 'true' && inputs.dry-run != 'true' }}
      shell: bash
      run: |
        TAG_NAME="${{ inputs.tag }}"
        RELEASE_TITLE="$TAG_NAME"
        RELEASE_BODY="Automatically generated release for tag $TAG_NAME."

        echo "Checking if release $TAG_NAME exists..."

        if gh release view "$TAG_NAME" &>/dev/null; then
          echo "üîÅ echo Release $TAG_NAME already exists. Updating it..."
          gh release edit "$TAG_NAME"  --title "$RELEASE_TITLE" --notes "$RELEASE_BODY"
        else
          echo "üöÄ Release $TAG_NAME does not exist. Creating it..."
          gh release create "$TAG_NAME" --title "$RELEASE_TITLE" --notes "$RELEASE_BODY"
        fi
        echo "‚úÖ Release $TAG_NAME has been created or updated successfully.

    - name: Switch to tag
      if: ${{ inputs.switch-to-tag == 'true' &&  inputs.create-tag == 'true' && inputs.dry-run != 'true' }}
      shell: bash
      run: |
        git fetch --tags
        git checkout tags/${{ inputs.tag }}
        echo "Switched to tag '${{ inputs.tag-name }}'"
