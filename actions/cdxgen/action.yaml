---
# Input parameter project_type is optional.
# If not provided, the script will try to detect the project type automatically.
# More info on possible values for project_type can be found there:
# https://cyclonedx.github.io/cdxgen/#/PROJECT_TYPES

name: "Generate SBOM file for project"
description: "Generate Software Bill of Materials (SBOM) file for the project and CycloneDX vulnerability report"

inputs:
  project_type:
    description: "Type of the project"
    required: false
  generate_cdx_report:
    description: "Generate CycloneDX report"
    required: false
    default: "false"
outputs:
  page-url:
    description: "GitHub pages URL"
    value: ${{ steps.deployment.outputs.page_url }}
runs:
  using: "composite"
  steps:
    - name: "Checout code"
      uses: actions/checkout@v4

    - name: "Check input"
      shell: bash
      run: |
        if [[ "${{ inputs.project_type }}" != "" ]]
        then
          echo "Project type is provided: ${{ inputs.project_type }}"
          echo "PROJECT_TYPE=-t ${{ inputs.project_type }}" >> $GITHUB_ENV
        else
          echo "Project type is not provided"
          echo "PROJECT_TYPE=" >> $GITHUB_ENV
        fi

    - name: "Free some space"
      run: rm -rf /opt/hostedtoolcache
      shell: bash

    - name: "Generate BOM"
      run: |
        cd ${GITHUB_WORKSPACE}
        export FETCH_LICENSE=true
        docker run --rm -e FETCH_LICENSE=true -v /tmp:/tmp -v $(pwd):/app:rw -t ghcr.io/cyclonedx/cdxgen:v8.6.0 -r /app -p -o /app/${{ github.event.repository.name }}_sbom.json "${{ env.PROJECT_TYPE }}"
        docker rmi -f $(docker images -aq)
      shell: bash

    - name: "Upload SBOM file"
      uses: actions/upload-artifact@v4.6.0
      with:
        name: "BOM file"
        path: ${{ github.workspace }}/**/${{ github.event.repository.name }}_sbom.json
        retention-days: 5

    - name: "Generate Depscan report"
      if: ${{ inputs.generate_cdx_report == 'true' }}
      run: |
        cd ${GITHUB_WORKSPACE}
        export FETCH_LICENSE=true
        docker run --rm -e FETCH_LICENSE=true -v $PWD:/app ghcr.io/owasp-dep-scan/dep-scan --src /app \
        --reports-dir /app/reports --bom /app/${{ github.event.repository.name }}_sbom.json
      shell: bash

    - name: "Create index.html"
      if: ${{ inputs.generate_cdx_report == 'true' }}
      shell: bash
      run: |
        cd ${GITHUB_WORKSPACE}
        sudo cp -f ${{ github.event.repository.name }}_sbom.json ./reports/${{ github.event.repository.name }}_sbom.json
        cat > ./index.html <<EOL
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>DEPSCAN Report</title>
        </head>
        <body>
            <div id="depscan-content">
                <h1>DEPSCAN Analysis</h1>
                <p>This is the DEPSCAN analysis report.</p>
                <iframe src="./depscan.html"
                height="500px" width="1000px">
                </iframe>
            </div>
            <hr>
            <h2>Related Files</h2>
            <ul>
                <li><a href="${{ github.event.repository.name }}_sbom.json" target="_blank">Download ${{ github.event.repository.name }}_sbom.json</a></li>
                <li><a href="depscan.html" target="_blank">Download depscan.html</a></li>
                <li><a href="depscan.pdf" target="_blank">Download depscan.pdf</a></li>
                <li><a href="depscan-bom.json" target="_blank">Download depscan-bom.json</a></li>
                <li><a href="license-bom.json" target="_blank">Download license-bom.json</a></li>
            </ul>
        </body>
        </html>
        EOL
        sudo cp -f ./index.html ./reports/index.html
        sudo mkdir -p ./output/cyclondx-report
        sudo cp -rf ./reports/* ./output/cyclondx-report

    - name: "Upload Depscan report"
      if: ${{ inputs.generate_cdx_report == 'true' }}
      uses: actions/upload-artifact@v4.6.0
      with:
        name: "DEPSCAN report"
        path: ${{ github.workspace }}/reports/*
        retention-days: 5

    - name: Upload static files as artifact
      if: ${{ inputs.generate_cdx_report == 'true' }}
      id: upload
      uses: actions/upload-pages-artifact@v3
      with:
        path: ${{ github.workspace }}/output/

    - name: "Set output"
      if: ${{ inputs.generate_cdx_report == 'true' }}
      shell: bash
      run: |
        echo "Uploaded page artifact-id: ${{ steps.upload.outputs.artifact_id }}" >> $GITHUB_STEP_SUMMARY
